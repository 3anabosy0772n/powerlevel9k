#!/usr/bin/env zsh
# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# powerlevel9k Theme
# https://github.com/bhilburn/powerlevel9k
#
# This theme was inspired by agnoster's Theme:
# https://gist.github.com/3712874
################################################################

prompt_icon=(
  "CARRIAGE_RETURN_ICON"
   $'\u21B5' # ↵
   $'\u21B5' # ↵
   $'\u21B5' # ↵
   $'\u21B5' # ↵
   $'\u21B5' # ↵
)
register_icon "$prompt_icon[@]"

#              ↵ ↵ ↵ ↵ ↵
#register_icon "CARRIAGE_RETURN_ICON"  $'\u21B5'  $'\u21B5'  $'\u21B5'  $'\u21B5'  $'\u21B5'

prompt_icon=(
  "OK_ICON"
   $'\u2714' # ✔
   $'\u2714' # ✔
   $'\u2714' # ✔
   '\u'$CODEPOINT_OF_AWESOME_CHECK # 
   $'\uF00C' # 
)
register_icon "$prompt_icon[@]"

#                        ✔         ✔          ✔                                         
#register_icon "OK_ICON"  $'\u2714'  $'\u2714'  $'\u2714'  '\u'$CODEPOINT_OF_AWESOME_CHECK  $'\uF00C'

prompt_icon=(
  "FAIL_ICON"
   $'\u2718' # ✘
   $'\u2718' # ✘
   $'\u2718' # ✘
   '\u'$CODEPOINT_OF_AWESOME_TIMES # 
   $'\uF00D' # 
)
register_icon "$prompt_icon[@]"

#                          ✘          ✘         ✘                                          
#register_icon "FAIL_ICON"  $'\u2718'  $'\u2718'  $'\u2718'  '\u'$CODEPOINT_OF_AWESOME_TIMES  $'\uF00D'

unset prompt_icon

################################################################
# Status: When an error occur, return the error code, or a cross icon if option is set
# Display an ok icon when no error occur, or hide the segment if option is set to false
#
set_default POWERLEVEL9K_STATUS_CROSS false
set_default POWERLEVEL9K_STATUS_OK true
set_default POWERLEVEL9K_STATUS_SHOW_PIPESTATUS true
set_default POWERLEVEL9K_STATUS_HIDE_SIGNAME false
# old options, retro compatibility
set_default POWERLEVEL9K_STATUS_VERBOSE true
set_default POWERLEVEL9K_STATUS_OK_IN_NON_VERBOSE false

exit_code_or_status() {
  local ec=$1
  if [[ "$POWERLEVEL9K_STATUS_HIDE_SIGNAME" = true ]]; then
    echo "$ec"
  elif (( ec <= 128 )); then
    echo "$ec"
  else
    local sig=$(( ec - 128 ))
    local idx=$(( sig + 1 ))
    echo "SIG${signals[$idx]}(${sig})"
  fi
}

prompt_status() {
  local ec_text
  local ec_sum
  local ec

  if [[ $POWERLEVEL9K_STATUS_SHOW_PIPESTATUS == true ]]; then
    ec_text=$(exit_code_or_status "${RETVALS[1]}")
    ec_sum=${RETVALS[1]}

    for ec in "${(@)RETVALS[2,-1]}"; do
      ec_text="${ec_text}|$(exit_code_or_status "$ec")"
      ec_sum=$(( $ec_sum + $ec ))
    done
  else
    # We use RETVAL instead of the right-most RETVALS item because
    # PIPE_FAIL may be set.
    ec_text=$(exit_code_or_status "${RETVAL}")
    ec_sum=${RETVAL}
  fi

  if (( ec_sum > 0 )); then
    if [[ "$POWERLEVEL9K_STATUS_CROSS" == false && "$POWERLEVEL9K_STATUS_VERBOSE" == true ]]; then
      "$1_prompt_segment" "$0_ERROR" "$2" "red" "yellow1" "$ec_text" 'CARRIAGE_RETURN_ICON'
    else
      "$1_prompt_segment" "$0_ERROR" "$2" "$DEFAULT_COLOR" "red" "" 'FAIL_ICON'
    fi
  elif [[ "$POWERLEVEL9K_STATUS_OK" == true ]] && [[ "$POWERLEVEL9K_STATUS_VERBOSE" == true || "$POWERLEVEL9K_STATUS_OK_IN_NON_VERBOSE" == true ]]; then
    "$1_prompt_segment" "$0_OK" "$2" "$DEFAULT_COLOR" "green" "" 'OK_ICON'
  fi
}
